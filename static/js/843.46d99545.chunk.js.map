{"version":3,"file":"static/js/843.46d99545.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContackList/ContactList.styled.js","components/ContackList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/contacts.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\nborder: solid 1px black;\npadding: 20px;\nwidth: 180px;\nborder-radius: 4px;\nbutton {\n    display: block;\n    margin-top: 20px;\n}\n`;","import styled from \"@emotion/styled\";\n\nexport const ContactListItem = styled.li`\np {\n    display: inline-block;\n    margin-right: 20px;\n}\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact} from 'redux/contactOperation';\nimport { ContactListItem } from './ContactList.styled';\nimport { Button } from '@mui/material';\n\nconst ContactList = () => {\n  const dispatch = useDispatch()\n  const filter = useSelector(state => state.filter.filter)\n  const contacts = useSelector(state => state.contacts.items)\n\n  const visibleContacts = () => {\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  }\n  \n  return (                                                             \n  <ul>\n    {visibleContacts().map(({id, name, number}) => (\n        <ContactListItem key={id}>\n            <p>{name} {number}</p>\n            <Button onClick={() => dispatch(deleteContact(id))}>Delete</Button>\n        </ContactListItem>\n    ))}\n  </ul>\n)};\n\nexport default ContactList","import {useState} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {addContact} from 'redux/contactOperation';\nimport { Form } from './ContactForm.styled';\nimport { Button} from '@mui/material';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch()\n  const contacts = useSelector(state => state.contacts.items)\n  const[name,setName] = useState('');\n  const[number,setNumber] = useState('');\n    \n  const handleOnChange = e => {\n    const {value} = e.currentTarget\n    if(e.currentTarget.name === 'name') {\n      setName(value)\n    }\n    if(e.currentTarget.name === 'number') {\n      setNumber(value)\n    }        \n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const contact = {name: `${name}`, number: `${number}`}\n    \n    const filterResult = contacts.find(prevContact =>\n      prevContact.name.toLowerCase().trim() ===\n      contact.name.toLowerCase().trim() ||\n      prevContact.number.trim() === contact.number.trim()\n    )\n    if(filterResult)\n      alert(`${contact.name}: is already in contacts`)\n    else dispatch(addContact(contact))\n    reset()\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('')\n  }\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <label htmlFor={name}>Name\n        <input \n          type=\"text\"\n          name=\"name\" \n          value={name}\n          pattern=\"^[a-zA-Za-яА-Я]+(([' -][a-zA-Za-яА-Я ])?[a-zA-Za-яА-Я]*)*$\" \n          title=\"Name may contain onle letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Bats de Castelmore d`Artagnan\" \n          required\n          onChange={handleOnChange}\n          id={name}\n        />\n        </label>\n      <label htmlFor={number}>Number\n        <input \n          type=\"tel\"\n          name=\"number\" \n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\" \n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\" \n          required\n          onChange={handleOnChange}\n          id={number}\n        />\n      </label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  )   \n}","import styled from \"@emotion/styled\";\n\nexport const FilterInput = styled.input`\ndisplay: block;\nmargin-top: 8px;\n}\n`;","import { useDispatch} from 'react-redux';\nimport {filterContact} from 'redux/filterSlise';\nimport { FilterInput } from \"./Filter.styled\";\n\nconst Filter = () => {\n  const dispatch = useDispatch()\n\n  return(\n    <label>Find contacts by name\n    <FilterInput type=\"text\" onChange={(e) => dispatch(filterContact(e))}/>\n    </label>\n  )\n}\n\nexport default Filter","import ContactList from 'components/ContackList/ContactList'\nimport ContactForm from 'components/ContactForm/ContactForm'\nimport Filter from 'components/Filter/Filter'\nimport {fetchContacts} from 'redux/contactOperation';\nimport { useDispatch, useSelector} from 'react-redux';\nimport {useEffect} from 'react';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(state => state.contacts.isLoading);\n  const error = useSelector(state => state.contacts.error);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div\n      style={{\n        height: '100vh',\n        display: 'block',\n        marginLeft: '40px',\n        fontSize: 16,\n        color: '#010101'\n      }}\n    >\n      <h1>Phonebook</h1>\n      <ContactForm/>\n      <h2>Contacts</h2>\n      <Filter/>\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ContactList/>\n    </div>\n  )\n};\n\nexport default Contacts"],"names":["Form","styled","ContactListItem","dispatch","useDispatch","filter","useSelector","state","contacts","items","contact","name","toLowerCase","includes","map","id","number","Button","onClick","deleteContact","ContactForm","useState","setName","setNumber","handleOnChange","e","value","currentTarget","reset","onSubmit","preventDefault","find","prevContact","trim","alert","addContact","htmlFor","type","pattern","title","required","onChange","FilterInput","filterContact","isLoading","error","useEffect","fetchContacts","style","height","display","marginLeft","fontSize","color"],"sourceRoot":""}